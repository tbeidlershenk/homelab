name: Deploy

on:
    push:
        branches:
            - main

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Docker
              uses: docker/setup-buildx-action@v2

            - name: Install Doppler CLI
              uses: dopplerhq/cli-action@v3

            - name: Start services
              working-directory: ${{ github.workspace }}
              env:
                  DOPPLER_PROJECT: ${{ secrets.DOPPLER_PROJECT }}
                  DOPPLER_CONFIG: ${{ secrets.DOPPLER_CONFIG }}
                  DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
              run: |
                  ./scripts/start.sh

            - name: Run Healthcheck
              working-directory: ${{ github.workspace }}
              env:
                  DOPPLER_PROJECT: ${{ secrets.DOPPLER_PROJECT }}
                  DOPPLER_CONFIG: ${{ secrets.DOPPLER_CONFIG }}
                  DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
              run: |
                  ./scripts/healthcheck.sh

            - name: Run Backup
              working-directory: ${{ github.workspace }}
              env:
                  DOPPLER_PROJECT: ${{ secrets.DOPPLER_PROJECT }}
                  DOPPLER_CONFIG: ${{ secrets.DOPPLER_CONFIG }}
                  DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
              run: |
                  ./scripts/backup.sh

            - name: Run Restore
              working-directory: ${{ github.workspace }}
              env:
                  DOPPLER_PROJECT: ${{ secrets.DOPPLER_PROJECT }}
                  DOPPLER_CONFIG: ${{ secrets.DOPPLER_CONFIG }}
                  DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
              run: |
                  ./scripts/restore.sh

            - name: Tear down
              working-directory: ${{ github.workspace }}
              env:
                  DOPPLER_PROJECT: ${{ secrets.DOPPLER_PROJECT }}
                  DOPPLER_CONFIG: ${{ secrets.DOPPLER_CONFIG }}
                  DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
              run: |
                  ./scripts/stop.sh

    deploy:
        needs: test
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            # Deploy to homelab over Tailscale SSH
            - name: Connect Tailscale
              uses: tailscale/github-action@v3
              with:
                  authkey: ${{ secrets.TAILSCALE_CI_AUTHKEY }}
                  statedir: /tmp/tailscale-state/

            - name: Deploy to server
              run: |
                  ssh -o "StrictHostKeyChecking no" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
                    cd ~/homelab
                    git fetch --all
                    git reset --hard origin/main
                    ./scripts/restart.sh
                  "
